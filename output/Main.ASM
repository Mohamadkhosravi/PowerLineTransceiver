; Generated by holtek-gcc v3.19, Sat Nov 23 12:34:34 2024
; 
; Configuration:
;       with long instruction
;       Single ROM, Multi-RAM
;       bits_per_rom_unit:16
;       with mp1
;       with tbhp, address(0x9)
;          Use tabrd-const
;       
; SFR address of long-instruction arch:
;    mp0 = -1,1,0
;    mp1 = 4,3,2
;    mp2 = 14,13,12
;    tbp = 9,7,8
;    acc = 5
;    pcl = 6
;    status = 10
;    bp = 11
;    intc = 72
;       
;       
; use 'tabrdc' instead of 'tabrd'
;       

#pragma translator "holtek-gcc 4.6.4" "3.19" "build 20130711"
; Rebuild 718

ir equ [2]
mp equ [3]
sbp equ [4]
acc equ [5]
bp equ [11]
tblp equ [7]
tbhp equ [9]
status equ [10]
c equ [10].0
ac equ [10].1
z equ [10].2
ov equ [10].3
cz equ [10].6
sc equ [10].7
intc equ [72]

extern ra:byte
extern rb:byte
extern rc:byte
extern rd:byte
extern re:byte
extern rf:byte
extern rg:byte
extern rh:byte
extern _Crom2Prom:near
extern _Crom2PromNext:near

RAMBANK 0 @BITDATASEC, @BITDATASEC1
@HCCINIT	.section 'data'
@HCCINIT0	.section 'data'
@BITDATASEC	 .section 'data'
@BITDATASEC1	 .section 'data'

#pragma debug scope 1 1
	extern __DELAY3:near
	extern __DELAYX3:near
	extern __DELAYX6:near
	extern __DELAYY5:near
	extern __DELAYY3:near
	extern _builtin_holtek_delay_2:byte
___pa equ [20]
public _main
#pragma debug scope 2 1
#line 42 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
IFDEF WITH_DEFAULT_STARTUP
extern _main_initial0:near
extern _main_startup:near
ENDIF

ROMBANK 0 @start
@start .section com_l 'code'
_main_startup1:
@start .section com_e 'code'
	jmp _main

_main .section 'code'
_main proc
    local _main_2 db 2 dup(?)
#pragma debug variable 12 2 _main_2+0 "Data"
#line 45 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _S_RCC_Init
#line 47 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _S_GPIO_Init
#line 48 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _IntrruptInit
#line 49 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,-128
	mov _UART_Init_2[0],a
	mov a,37
	mov _UART_Init_2[1],a
	call _UART_Init
#line 50 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _PLT0Init
#line 51 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _PLT1Init
#line 54 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr [20].4
_L11:
#pragma debug scope 3 2
;begin block, line: 54.-1
#line 58 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,[20]
	mov ra,a
#line 93 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
;# 93 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	clr wdt
#line 94 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _UART_ReceiveNonBlocking
	mov ra,a
	mov a,ra
	mov _main_2[0],a
	clr _main_2[1]
	sz acc.7
	set _main_2[1]
#line 95 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
;# 95 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	clr wdt
#line 97 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,_main_2[0]
	or a,_main_2[1]
	sz z
	jmp _L3
#line 99 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,ra
	call _UART_Transmit
#line 100 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,_main_2[0]
	xor a,103
	or a,_main_2[1]
	sz z
	jmp _L4
	mov a,_main_2[0]
	xor a,90
	or a,_main_2[1]
	snz z
	jmp _L5
_L4:
#line 102 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,1
	mov _AddresssValid[0],a
_L5:
#line 105 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	snz _AddresssValid[0]
	jmp _L3
	mov a,_main_2[0]
	xor a,79
	or a,_main_2[1]
	snz z
	jmp _L6
#line 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000>263690
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	ERRMESSAGE 'the value 10000of the argument exceeds the maxinum 263690'
	ENDIF
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000<0
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	ERRMESSAGE 'the value 10000 of the argument exceeds the mininum 0'
	ENDIF
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000==0
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	JMP $
	ENDIF
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000==1
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
	ENDIF
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000==2
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
	ENDIF
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000==3
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
	ENDIF
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (10000<8) AND (10000>3)
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAY3 + 7 -10000
	ENDIF
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (10000< 0404h) AND (10000>7)
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,10000/4-1
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYX3 + 3 -(10000 MOD 4)
	ENDIF
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (10000< 0x40B) AND (10000> 0403h)
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,0 
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYX6 + 0x40a -10000
	ENDIF
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (10000 >= 0x40b) AND ((((10000-9)%0402h)/4+1)>256)
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,(10000-9)/0402h
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,0
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYY5 +5- (((10000-9)%0402h)%6)
	ENDIF
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (10000 >= 0x40b) AND ((((10000-9)%0402h)/4+1)<=256)
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,(10000-9)/0402h
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,((10000-9)%0402h)/4+1
;# 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYY3 +3-(((10000-9)%0402h)%4)
	ENDIF
#line 108 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _PLTAInit
#line 116 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_situation[2]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_situation[3]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,232  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	mov a,3  
	mov _builtin_holtek_udivmodhi4_2[3],a
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[0]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[1]  
	mov rc,a
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,rb  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,rc  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	mov a,48
	addm a,rb
	mov a,rb
	call _UART_Transmit
#line 117 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_situation[2]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_situation[3]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,100  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[0]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[1]  
	mov rc,a
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,rb  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,rc  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	mov a,48
	addm a,rb
	mov a,rb
	call _UART_Transmit
#line 118 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_situation[2]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_situation[3]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[0]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[1]  
	mov rc,a
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,rb  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,rc  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	mov a,48
	addm a,rb
	mov a,rb
	call _UART_Transmit
#line 119 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_situation[2]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_situation[3]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	mov a,48
	addm a,rb
	mov a,rb
	call _UART_Transmit
#line 121 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,84
	call _UART_Transmit
#line 122 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,61
	call _UART_Transmit
#line 123 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_situation[0]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_situation[1]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,232  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	mov a,3  
	mov _builtin_holtek_udivmodhi4_2[3],a
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[0]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[1]  
	mov rc,a
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,rb  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,rc  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	mov a,48
	addm a,rb
	mov a,rb
	call _UART_Transmit
#line 124 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_situation[0]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_situation[1]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,100  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[0]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[1]  
	mov rc,a
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,rb  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,rc  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	mov a,48
	addm a,rb
	mov a,rb
	call _UART_Transmit
#line 125 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_situation[0]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_situation[1]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[0]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[1]  
	mov rc,a
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,rb  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,rc  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	mov a,48
	addm a,rb
	mov a,rb
	call _UART_Transmit
#line 126 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_situation[0]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_situation[1]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	mov a,48
	addm a,rb
	mov a,rb
	call _UART_Transmit
#line 127 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,10
	call _UART_Transmit
#line 128 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _AddresssValid[0]
_L6:
#line 131 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	snz _AddresssValid[0]
	jmp _L3
	mov a,_main_2[0]
	xor a,67
	or a,_main_2[1]
	snz z
	jmp _L3
#line 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000>263690
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	ERRMESSAGE 'the value 10000of the argument exceeds the maxinum 263690'
	ENDIF
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000<0
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	ERRMESSAGE 'the value 10000 of the argument exceeds the mininum 0'
	ENDIF
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000==0
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	JMP $
	ENDIF
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000==1
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
	ENDIF
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000==2
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
	ENDIF
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000==3
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
	ENDIF
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (10000<8) AND (10000>3)
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAY3 + 7 -10000
	ENDIF
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (10000< 0404h) AND (10000>7)
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,10000/4-1
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYX3 + 3 -(10000 MOD 4)
	ENDIF
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (10000< 0x40B) AND (10000> 0403h)
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,0 
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYX6 + 0x40a -10000
	ENDIF
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (10000 >= 0x40b) AND ((((10000-9)%0402h)/4+1)>256)
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,(10000-9)/0402h
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,0
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYY5 +5- (((10000-9)%0402h)%6)
	ENDIF
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (10000 >= 0x40b) AND ((((10000-9)%0402h)/4+1)<=256)
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,(10000-9)/0402h
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,((10000-9)%0402h)/4+1
;# 133 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYY3 +3-(((10000-9)%0402h)%4)
	ENDIF
#line 134 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _PLTAInit
#line 157 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _AddresssValid[0]
_L3:
#line 162 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _PLTAOFF
#line 163 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,1
	add a,_Counter[0]
	mov rd,a
	mov a,0
	adc a,_Counter[1]
	mov re,a
	mov a,0
	adc a,_Counter[2]
	mov rf,a
	mov a,0
	adc a,_Counter[3]
	mov rg,a
	mov a,rd
	mov _Counter[0],a
	mov a,re
	mov _Counter[1],a
	mov a,rf
	mov _Counter[2],a
	mov a,rg
	mov _Counter[3],a
#line 164 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,200
	sub a,rd
	mov a,50
	sbc a,re
	mov a,0
	sbc a,rf
	mov a,0
	sbc a,rg
	sz c
	jmp _L8
#line 167 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	inc _CounterLED[0]
	sz z
	inc _CounterLED[1]
#line 168 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	inc _CounterStatusCheck[0]
	sz z
	inc _CounterStatusCheck[1]
#line 169 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _Counter[0]
	clr _Counter[1]
	clr _Counter[2]
	clr _Counter[3]
_L8:
#line 171 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,1
	sub a,_CounterStatusCheck[0]
	mov a,0
	sbc a,_CounterStatusCheck[1]
	sz c
	jmp _L9
#line 174 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _ADCInit
#line 175 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	set [20].2
#line 176 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,1
	call _ReadADC
	clr _temperature_2[2]
	mov a,64
	mov _temperature_2[3],a
	mov a,64
	mov _temperature_2[4],a
	mov a,ra
	mov _temperature_2[0],a
	mov a,rb
	mov _temperature_2[1],a
	call _temperature
	mov a,rc
	mov _builtin_holtek_mant1[2],a
	mov a,rb
	mov _builtin_holtek_mant1[1],a
	mov a,ra
	mov _builtin_holtek_mant1[0],a
	mov a,66
	mov _builtin_holtek_mant2[2],a
	mov a,200
	mov _builtin_holtek_mant2[1],a
	mov a,0
	mov _builtin_holtek_mant2[0],a
	call _builtin_holtek_ftmul
	mov a,_builtin_holtek_mant1[2]
	mov re,a
	mov a,_builtin_holtek_mant1[1]
	mov rd,a
	mov a,_builtin_holtek_mant1[0]
	mov rc,a
	clr _builtin_holtek_mant12p[0]
	mov a,re
	mov _builtin_holtek_mant1[2],a
	mov a,rd
	mov _builtin_holtek_mant1[1],a
	mov a,rc
	mov _builtin_holtek_mant1[0],a
	call _builtin_holtek_ftol
	mov a,_builtin_holtek_mant12p[0]
	mov rg,a
	mov a,_builtin_holtek_mant1[2]
	mov rf,a
	mov a,_builtin_holtek_mant1[1]
	mov re,a
	mov a,_builtin_holtek_mant1[0]
	mov rd,a
	mov a,rd
	mov _situation[0],a
	mov a,re
	mov _situation[1],a
#line 177 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr [20].2
#line 178 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _InitSmokeDetection
#line 179 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,low (offset _situation+2)
	mov _CheckSmokeLevel_2[0],a
	mov a,high (offset _situation+2)
	mov _CheckSmokeLevel_2[1],a
	call _CheckSmokeLevel
#line 180 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _SmokeDitectionOFF
#line 181 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _ADC_Inactive
#line 182 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _CounterStatusCheck[0]
	clr _CounterStatusCheck[1]
_L9:
#line 186 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,11
	sub a,_CounterLED[0]
	mov a,0
	sbc a,_CounterLED[1]
	sz c
	jmp _L11
#line 188 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	set [20].4
#line 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 1000>263690
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	ERRMESSAGE 'the value 1000of the argument exceeds the maxinum 263690'
	ENDIF
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 1000<0
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	ERRMESSAGE 'the value 1000 of the argument exceeds the mininum 0'
	ENDIF
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 1000==0
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	JMP $
	ENDIF
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 1000==1
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
	ENDIF
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 1000==2
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
	ENDIF
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 1000==3
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
	ENDIF
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (1000<8) AND (1000>3)
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAY3 + 7 -1000
	ENDIF
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (1000< 0404h) AND (1000>7)
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,1000/4-1
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYX3 + 3 -(1000 MOD 4)
	ENDIF
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (1000< 0x40B) AND (1000> 0403h)
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,0 
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYX6 + 0x40a -1000
	ENDIF
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (1000 >= 0x40b) AND ((((1000-9)%0402h)/4+1)>256)
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,(1000-9)/0402h
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,0
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYY5 +5- (((1000-9)%0402h)%6)
	ENDIF
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (1000 >= 0x40b) AND ((((1000-9)%0402h)/4+1)<=256)
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,(1000-9)/0402h
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,((1000-9)%0402h)/4+1
;# 189 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYY3 +3-(((1000-9)%0402h)%4)
	ENDIF
#line 190 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr [20].4
#line 191 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _CounterLED[0]
	clr _CounterLED[1]
	jmp _L11
#pragma debug scope 2 1
	jmp $
_main endp

@dummy proc
	call _main
@dummy endp

#line 191 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
#pragma debug scope 1 1
public _UART_ReceiveString
#pragma debug scope 4 1
#line 202 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
_UART_ReceiveString .section 'code'
_UART_ReceiveString proc
    local _UART_ReceiveString_2 db 2 dup(?)	; 0,2
#line 206 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,___index_2090[0]
	mov _UART_ReceiveString_2[0],a
	clr _UART_ReceiveString_2[1]
	sz acc.7
	set _UART_ReceiveString_2[1]
	call _UART_ReceiveNonBlocking
	mov ra,a
	mov a,low offset ___resiveBuffer_2089
	add a,_UART_ReceiveString_2[0]
	mov mp,a
	mov a,high offset ___resiveBuffer_2089
	adc a,_UART_ReceiveString_2[1]
	mov sbp,a
	mov a,ra
	mov ir,a
#line 207 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	snz ___resiveBuffer_2089[0]
	jmp _L18
#line 208 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	inc ___index_2090[0]
#line 209 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,1
	mov ___DataValid_2091[0],a
	jmp _L20
_L18:
#line 211 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	snz ___DataValid_2091[0]
	jmp _L20
#line 213 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,low offset ___resiveBuffer_2089
	mov ra,a
	mov a,high offset ___resiveBuffer_2089
	mov rb,a
	jmp _L17
_L20:
_L17:
	ret
_UART_ReceiveString endp
#line 213 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
#pragma debug scope 1 1
@HCCINIT	.section 'data'
#line 205 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
@HCCINIT___DataValid_2091 .section 'data'
___DataValid_2091 label byte
#pragma debug variable 7 4 ___DataValid_2091 "DataValid"
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT___DataValid_2091 .section 'data'
#line 203 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
@HCCINIT___resiveBuffer_2089 .section 'data'
___resiveBuffer_2089 label byte
#pragma debug array 42 8 10 1
#pragma debug variable 42 4 ___resiveBuffer_2089 "resiveBuffer"
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT___resiveBuffer_2089 .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT___resiveBuffer_2089 .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT___resiveBuffer_2089 .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT___resiveBuffer_2089 .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT___resiveBuffer_2089 .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT___resiveBuffer_2089 .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT___resiveBuffer_2089 .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT___resiveBuffer_2089 .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT___resiveBuffer_2089 .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT___resiveBuffer_2089 .section 'data'
#line 204 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
@HCCINIT___index_2090 .section 'data'
___index_2090 label byte
#pragma debug variable 7 4 ___index_2090 "index"
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT___index_2090 .section 'data'
#line 38 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
public _situation
@HCCINIT0_situation .section 'data'
_situation	db 4 dup(0)
#pragma debug struct_begin 43 ""
#pragma debug field 0 12 "TemperatureValue"
#pragma debug field 0 12 "SmokeValue"
#pragma debug struct_end
#pragma debug variable 43 1 _situation "situation"

@HCCINIT .section 'data'
public _AddresssValid
#line 29 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
@HCCINIT_AddresssValid .section 'data'
_AddresssValid label byte
#pragma debug variable 8 1 _AddresssValid "AddresssValid"
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_AddresssValid .section 'data'
public _PushButtonCounter
#line 28 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
@HCCINIT_PushButtonCounter .section 'data'
_PushButtonCounter label byte
#pragma debug variable 12 1 _PushButtonCounter "PushButtonCounter"
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_PushButtonCounter .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_PushButtonCounter .section 'data'
public _pushButtonState
#line 27 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
@HCCINIT_pushButtonState .section 'data'
_pushButtonState label byte
#pragma debug variable 8 1 _pushButtonState "pushButtonState"
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_pushButtonState .section 'data'
public _i
#line 22 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
@HCCINIT_i .section 'data'
_i label byte
#pragma debug variable 11 1 _i "i"
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_i .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_i .section 'data'
public _Stat
#line 21 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
@HCCINIT_Stat .section 'data'
_Stat label byte
#pragma debug variable 8 1 _Stat "Stat"
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_Stat .section 'data'
public _CounterStatusCheck
#line 18 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
@HCCINIT_CounterStatusCheck .section 'data'
_CounterStatusCheck label byte
#pragma debug variable 12 1 _CounterStatusCheck "CounterStatusCheck"
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_CounterStatusCheck .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_CounterStatusCheck .section 'data'
public _CounterLED
#line 17 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
@HCCINIT_CounterLED .section 'data'
_CounterLED label byte
#pragma debug variable 12 1 _CounterLED "CounterLED"
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_CounterLED .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_CounterLED .section 'data'
public _Counter
#line 16 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
@HCCINIT_Counter .section 'data'
_Counter label byte
#pragma debug variable 14 1 _Counter "Counter"
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_Counter .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_Counter .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_Counter .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_Counter .section 'data'
public _buffer_index
#line 13 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
@HCCINIT_buffer_index .section 'data'
_buffer_index label byte
#pragma debug variable 11 1 _buffer_index "buffer_index"
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_buffer_index .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_buffer_index .section 'data'
#line 12 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
public _buffer
@HCCINIT0_buffer .section 'data'
_buffer	db 12 dup(0)
#pragma debug array 44 7 12 1
#pragma debug variable 44 1 _buffer "buffer"

@HCCINIT .section 'data'
#line 9 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
public _temp
@HCCINIT0_temp .section 'data'
_temp	db 2 dup(0)
#pragma debug variable 12 1 _temp "temp"

@HCCINIT .section 'data'
#line 8 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
public _tx_busy
@HCCINIT0_tx_busy .section 'data'
_tx_busy	db 0
#pragma debug variable 7 1 _tx_busy "tx_busy"

@HCCINIT .section 'data'
#line 7 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
public _frame
@HCCINIT0_frame .section 'data'
_frame	db 2 dup(0)
#pragma debug pointer 45 10 1
#pragma debug variable 45 1 _frame "frame"

@HCCINIT .section 'data'
#pragma debug struct_begin 46 "__pa_bits"
#pragma debug field 21 8 0 1 "__pa0" ;0,1
#pragma debug field 21 8 0 1 "__pa1" ;1,1
#pragma debug field 21 8 0 1 "__pa2" ;2,1
#pragma debug field 21 8 0 1 "__pa3" ;3,1
#pragma debug field 21 8 0 1 "__pa4" ;4,1
#pragma debug field 21 8 0 1 "__pa5" ;5,1
#pragma debug field 21 8 0 1 "__pa6" ;6,1
#pragma debug field 21 8 0 1 "__pa7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 47 ""
#pragma debug field 2 46 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 47 1 ___pa "__pa" 1
#line 42 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
@code .section at 0 'code'
	jmp _main_startup1

extern _S_RCC_Init:near
extern _S_GPIO_Init:near
extern _IntrruptInit:near
extern _UART_Init_2:byte
extern _UART_Init:near
extern _PLT0Init:near
extern _PLT1Init:near
extern _UART_ReceiveNonBlocking:near
extern _UART_Transmit:near
extern _PLTAInit:near
extern _builtin_holtek_udivmodhi4_2:byte
extern _builtin_holtek_udivmodhi4:near
extern _PLTAOFF:near
extern _ADCInit:near
extern _ReadADC:near
extern _temperature_2:byte
extern _temperature:near
extern _builtin_holtek_mant1:byte
extern _builtin_holtek_mant2:byte
extern _builtin_holtek_ftmul:near
extern _builtin_holtek_mant12p:byte
extern _builtin_holtek_ftol:near
extern _InitSmokeDetection:near
extern _CheckSmokeLevel_2:byte
extern _CheckSmokeLevel:near
extern _SmokeDitectionOFF:near
extern _ADC_Inactive:near

; 
; Generated by holtek-gcc v3.19, Sat Nov 23 12:34:34 2024
; Rebuild 718
; end of file
