; Generated by holtek-gcc v3.19, Mon Dec 30 10:52:34 2024
; 
; Configuration:
;       with long instruction
;       Single ROM, Multi-RAM
;       bits_per_rom_unit:16
;       with mp1
;       with tbhp, address(0x9)
;          Use tabrd-const
;       
; SFR address of long-instruction arch:
;    mp0 = -1,1,0
;    mp1 = 4,3,2
;    mp2 = 14,13,12
;    tbp = 9,7,8
;    acc = 5
;    pcl = 6
;    status = 10
;    bp = 11
;    intc = 72
;       
;       
; use 'tabrdc' instead of 'tabrd'
;       

#pragma translator "holtek-gcc 4.6.4" "3.19" "build 20130711"
; Rebuild 718

ir equ [2]
mp equ [3]
sbp equ [4]
acc equ [5]
bp equ [11]
tblp equ [7]
tbhp equ [9]
status equ [10]
c equ [10].0
ac equ [10].1
z equ [10].2
ov equ [10].3
cz equ [10].6
sc equ [10].7
intc equ [72]

extern ra:byte
extern rb:byte
extern rc:byte
extern rd:byte
extern re:byte
extern rf:byte
extern rg:byte
extern rh:byte
extern _Crom2Prom:near
extern _Crom2PromNext:near

RAMBANK 0 @BITDATASEC, @BITDATASEC1
@HCCINIT	.section 'data'
@HCCINIT0	.section 'data'
@BITDATASEC	 .section 'data'
@BITDATASEC1	 .section 'data'

#pragma debug scope 1 1
	extern __DELAY3:near
	extern __DELAYX3:near
	extern __DELAYX6:near
	extern __DELAYY5:near
	extern __DELAYY3:near
	extern _builtin_holtek_delay_2:byte
public _info
#pragma debug scope 2 1
#line 139 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
_info .section 'code'
_info proc
#line 140 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_situation[2]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_situation[3]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,232  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	mov a,3  
	mov _builtin_holtek_udivmodhi4_2[3],a
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[0]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[1]  
	mov rc,a
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,rb  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,rc  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	mov a,48
	addm a,rb
	mov a,rb
	call _UART_Transmit
#line 141 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_situation[2]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_situation[3]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,100  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[0]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[1]  
	mov rc,a
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,rb  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,rc  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	mov a,48
	addm a,rb
	mov a,rb
	call _UART_Transmit
#line 142 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_situation[2]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_situation[3]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[0]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[1]  
	mov rc,a
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,rb  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,rc  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	mov a,48
	addm a,rb
	mov a,rb
	call _UART_Transmit
#line 143 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_situation[2]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_situation[3]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	mov a,48
	addm a,rb
	mov a,rb
	call _UART_Transmit
#line 144 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,84
	call _UART_Transmit
#line 145 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,61
	call _UART_Transmit
#line 146 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_situation[0]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_situation[1]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,232  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	mov a,3  
	mov _builtin_holtek_udivmodhi4_2[3],a
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[0]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[1]  
	mov rc,a
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,rb  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,rc  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	mov a,48
	addm a,rb
	mov a,rb
	call _UART_Transmit
#line 147 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_situation[0]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_situation[1]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,100  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[0]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[1]  
	mov rc,a
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,rb  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,rc  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	mov a,48
	addm a,rb
	mov a,rb
	call _UART_Transmit
#line 148 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_situation[0]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_situation[1]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[0]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[1]  
	mov rc,a
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,rb  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,rc  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	mov a,48
	addm a,rb
	mov a,rb
	call _UART_Transmit
#line 149 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_situation[0]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_situation[1]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	call _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	mov a,48
	addm a,rb
	mov a,rb
	call _UART_Transmit
#line 150 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,10
	call _UART_Transmit
#line 151 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _AddresssValid[0]
	ret
_info endp
#line 151 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
#pragma debug scope 1 1
___pa equ [20]
public _main
#pragma debug scope 3 1
#line 35 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
IFDEF WITH_DEFAULT_STARTUP
extern _main_initial0:near
extern _main_startup:near
ENDIF

ROMBANK 0 @start
@start .section com_l 'code'
_main_startup1:
@start .section com_e 'code'
	jmp _main

_main .section 'code'
_main proc
    local _main_2 db 1 dup(?)
#pragma debug variable 7 3 _main_2+0 "Data"
#line 39 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _S_RCC_Init
#line 40 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _S_GPIO_Init
#line 41 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _InterruptInit
#line 42 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,-128
	mov _UART_Init_2[0],a
	mov a,37
	mov _UART_Init_2[1],a
	call _UART_Init
#line 43 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _PLT0Init
#line 44 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _PLT1Init
#line 45 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr [20].4
_L16:
#pragma debug scope 4 3
;begin block, line: 45.-1
#line 51 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	snz [20].0
	jmp _L3
#line 54 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	sdza _pushButtonState[0]
	jmp _L3
	mov a,10
	sub a,_PushButtonCounter[0]
	mov a,0
	sbc a,_PushButtonCounter[1]
	mov a,0
	sbc a,_PushButtonCounter[2]
	mov a,0
	sbc a,_PushButtonCounter[3]
	sz c
	jmp _L3
#line 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000>263690
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	ERRMESSAGE 'the value 10000of the argument exceeds the maxinum 263690'
	ENDIF
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000<0
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	ERRMESSAGE 'the value 10000 of the argument exceeds the mininum 0'
	ENDIF
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000==0
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	JMP $
	ENDIF
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000==1
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
	ENDIF
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000==2
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
	ENDIF
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000==3
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
	ENDIF
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (10000<8) AND (10000>3)
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAY3 + 7 -10000
	ENDIF
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (10000< 0404h) AND (10000>7)
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,10000/4-1
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYX3 + 3 -(10000 MOD 4)
	ENDIF
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (10000< 0x40B) AND (10000> 0403h)
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,0 
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYX6 + 0x40a -10000
	ENDIF
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (10000 >= 0x40b) AND ((((10000-9)%0402h)/4+1)>256)
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,(10000-9)/0402h
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,0
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYY5 +5- (((10000-9)%0402h)%6)
	ENDIF
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (10000 >= 0x40b) AND ((((10000-9)%0402h)/4+1)<=256)
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,(10000-9)/0402h
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,((10000-9)%0402h)/4+1
;# 55 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYY3 +3-(((10000-9)%0402h)%4)
	ENDIF
#line 56 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _PLTAInit
_L3:
#line 60 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
;# 60 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	clr wdt
#line 63 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _UART_ReceiveNonBlocking
	mov _main_2[0],a
#line 64 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
;# 64 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	clr wdt
#line 66 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	snz _main_2[0]
	jmp _L5
#line 67 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,_main_2[0]
	call _UART_Transmit
#line 69 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,_main_2[0]
	sub a,103
	sz z
	jmp _L6
	mov a,_main_2[0]
	sub a,90
	snz z
	jmp _L7
_L6:
#line 70 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,1
	mov _AddresssValid[0],a
_L7:
#line 74 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	snz _AddresssValid[0]
	jmp _L5
	mov a,_main_2[0]
	sub a,79
	snz z
	jmp _L8
#line 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000>263690
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	ERRMESSAGE 'the value 10000of the argument exceeds the maxinum 263690'
	ENDIF
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000<0
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	ERRMESSAGE 'the value 10000 of the argument exceeds the mininum 0'
	ENDIF
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000==0
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	JMP $
	ENDIF
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000==1
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
	ENDIF
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000==2
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
	ENDIF
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000==3
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
	ENDIF
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (10000<8) AND (10000>3)
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAY3 + 7 -10000
	ENDIF
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (10000< 0404h) AND (10000>7)
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,10000/4-1
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYX3 + 3 -(10000 MOD 4)
	ENDIF
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (10000< 0x40B) AND (10000> 0403h)
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,0 
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYX6 + 0x40a -10000
	ENDIF
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (10000 >= 0x40b) AND ((((10000-9)%0402h)/4+1)>256)
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,(10000-9)/0402h
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,0
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYY5 +5- (((10000-9)%0402h)%6)
	ENDIF
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (10000 >= 0x40b) AND ((((10000-9)%0402h)/4+1)<=256)
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,(10000-9)/0402h
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,((10000-9)%0402h)/4+1
;# 75 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYY3 +3-(((10000-9)%0402h)%4)
	ENDIF
#line 76 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _PLTAInit
#line 77 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,79
	call _UART_Transmit
#line 78 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _info
#line 79 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _AddresssValid[0]
_L8:
#line 82 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	snz _AddresssValid[0]
	jmp _L5
	mov a,_main_2[0]
	sub a,67
	snz z
	jmp _L9
#line 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000>263690
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	ERRMESSAGE 'the value 10000of the argument exceeds the maxinum 263690'
	ENDIF
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000<0
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	ERRMESSAGE 'the value 10000 of the argument exceeds the mininum 0'
	ENDIF
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000==0
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	JMP $
	ENDIF
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000==1
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
	ENDIF
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000==2
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
	ENDIF
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 10000==3
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
	ENDIF
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (10000<8) AND (10000>3)
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAY3 + 7 -10000
	ENDIF
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (10000< 0404h) AND (10000>7)
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,10000/4-1
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYX3 + 3 -(10000 MOD 4)
	ENDIF
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (10000< 0x40B) AND (10000> 0403h)
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,0 
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYX6 + 0x40a -10000
	ENDIF
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (10000 >= 0x40b) AND ((((10000-9)%0402h)/4+1)>256)
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,(10000-9)/0402h
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,0
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYY5 +5- (((10000-9)%0402h)%6)
	ENDIF
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (10000 >= 0x40b) AND ((((10000-9)%0402h)/4+1)<=256)
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,(10000-9)/0402h
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,((10000-9)%0402h)/4+1
;# 83 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYY3 +3-(((10000-9)%0402h)%4)
	ENDIF
#line 84 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _PLTAInit
#line 85 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,67
	call _UART_Transmit
#line 86 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _info
#line 87 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _AddresssValid[0]
_L9:
#line 90 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	snz _AddresssValid[0]
	jmp _L5
	mov a,_main_2[0]
	sub a,76
	snz z
	jmp _L10
#line 91 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,1
	mov _LEDState[0],a
#line 92 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _AddresssValid[0]
_L10:
#line 95 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	snz _AddresssValid[0]
	jmp _L5
	mov a,_main_2[0]
	sub a,72
	snz z
	jmp _L5
#line 96 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _LEDState[0]
#line 97 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _AddresssValid[0]
_L5:
#line 101 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,_LEDState[0]
	and a,1
	mov ra,a
	swapa ra
	and a,0f0h 
	mov ra,a
	clr [20].4
	mov a,ra
	orm a,[20]
#line 102 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _PLTAOFF
#line 105 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,1
	add a,_SecTick[0]
	mov rd,a
	mov a,0
	adc a,_SecTick[1]
	mov re,a
	mov a,0
	adc a,_SecTick[2]
	mov rf,a
	mov a,0
	adc a,_SecTick[3]
	mov rg,a
	mov a,rd
	mov _SecTick[0],a
	mov a,re
	mov _SecTick[1],a
	mov a,rf
	mov _SecTick[2],a
	mov a,rg
	mov _SecTick[3],a
#line 106 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,200
	sub a,rd
	mov a,50
	sbc a,re
	mov a,0
	sbc a,rf
	mov a,0
	sbc a,rg
	sz c
	jmp _L12
#line 107 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	inc _SecondsCounterLED[0]
#line 108 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	inc _SecondsCounterCheckStatus[0]
#line 109 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _SecTick[0]
	clr _SecTick[1]
	clr _SecTick[2]
	clr _SecTick[3]
_L12:
#line 113 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,1
	sub a,_SecondsCounterCheckStatus[0]
	sz c
	jmp _L13
#line 114 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _ADCInit
#line 115 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	set [20].2
#line 116 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,1
	call _ReadADC
	clr _temperature_2[2]
	mov a,64
	mov _temperature_2[3],a
	mov a,64
	mov _temperature_2[4],a
	mov a,ra
	mov _temperature_2[0],a
	mov a,rb
	mov _temperature_2[1],a
	call _temperature
	clr _builtin_holtek_mant12p[0]
	mov a,rc
	mov _builtin_holtek_mant1[2],a
	mov a,rb
	mov _builtin_holtek_mant1[1],a
	mov a,ra
	mov _builtin_holtek_mant1[0],a
	call _builtin_holtek_ftol
	mov a,_builtin_holtek_mant12p[0]
	mov rg,a
	mov a,_builtin_holtek_mant1[2]
	mov rf,a
	mov a,_builtin_holtek_mant1[1]
	mov re,a
	mov a,_builtin_holtek_mant1[0]
	mov rd,a
	mov a,rd
	mov _situation[0],a
	mov a,re
	mov _situation[1],a
#line 117 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr [20].2
#line 118 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _InitSmokeDetection
#line 119 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,low (offset _situation+2)
	mov _CheckSmokeLevel_2[0],a
	mov a,high (offset _situation+2)
	mov _CheckSmokeLevel_2[1],a
	call _CheckSmokeLevel
#line 120 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,_situation[2]
	or a,_situation[3]
	snz z
	jmp _L14
	mov a,70
	call _UART_Transmit
_L14:
#line 121 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _SmokeDetectionOFF
#line 122 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	call _ADC_Inactive
#line 123 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _SecondsCounterCheckStatus[0]
_L13:
#line 127 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	mov a,11
	sub a,_SecondsCounterLED[0]
	sz c
	jmp _L16
#line 128 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	set [20].4
#line 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 1000>263690
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	ERRMESSAGE 'the value 1000of the argument exceeds the maxinum 263690'
	ENDIF
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 1000<0
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	ERRMESSAGE 'the value 1000 of the argument exceeds the mininum 0'
	ENDIF
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 1000==0
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	JMP $
	ENDIF
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 1000==1
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
	ENDIF
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 1000==2
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
	ENDIF
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF 1000==3
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	NOP
	ENDIF
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (1000<8) AND (1000>3)
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAY3 + 7 -1000
	ENDIF
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (1000< 0404h) AND (1000>7)
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,1000/4-1
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYX3 + 3 -(1000 MOD 4)
	ENDIF
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (1000< 0x40B) AND (1000> 0403h)
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,0 
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYX6 + 0x40a -1000
	ENDIF
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (1000 >= 0x40b) AND ((((1000-9)%0402h)/4+1)>256)
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,(1000-9)/0402h
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,0
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYY5 +5- (((1000-9)%0402h)%6)
	ENDIF
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	IF (1000 >= 0x40b) AND ((((1000-9)%0402h)/4+1)<=256)
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,(1000-9)/0402h
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	MOV A,((1000-9)%0402h)/4+1
;# 129 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c" 1
	CALL __DELAYY3 +3-(((1000-9)%0402h)%4)
	ENDIF
#line 130 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr [20].4
#line 131 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
	clr _SecondsCounterLED[0]
	jmp _L16
#pragma debug scope 3 1
	jmp $
_main endp

@dummy proc
	call _main
@dummy endp

#line 131 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
#pragma debug scope 1 1
#line 30 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
public _tx_busy
@HCCINIT0_tx_busy .section 'data'
_tx_busy	db 0
#pragma debug variable 7 1 _tx_busy "tx_busy"

@HCCINIT .section 'data'
#line 29 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
public _frame
@HCCINIT0_frame .section 'data'
_frame	db 2 dup(0)
#pragma debug pointer 42 10 1
#pragma debug variable 42 1 _frame "frame"

@HCCINIT .section 'data'
public _LEDState
@HCCINIT	.section 'data'
#line 27 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
@HCCINIT_LEDState .section 'data'
_LEDState label byte
#pragma debug variable 8 1 _LEDState "LEDState"
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_LEDState .section 'data'
public _PushButtonCounter
#line 26 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
@HCCINIT_PushButtonCounter .section 'data'
_PushButtonCounter label byte
#pragma debug variable 14 1 _PushButtonCounter "PushButtonCounter"
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_PushButtonCounter .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_PushButtonCounter .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_PushButtonCounter .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_PushButtonCounter .section 'data'
public _AddresssValid
#line 25 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
@HCCINIT_AddresssValid .section 'data'
_AddresssValid label byte
#pragma debug variable 8 1 _AddresssValid "AddresssValid"
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_AddresssValid .section 'data'
public _pushButtonState
#line 24 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
@HCCINIT_pushButtonState .section 'data'
_pushButtonState label byte
#pragma debug variable 8 1 _pushButtonState "pushButtonState"
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_pushButtonState .section 'data'
public _i
#line 23 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
@HCCINIT_i .section 'data'
_i label byte
#pragma debug variable 12 1 _i "i"
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_i .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_i .section 'data'
public _SecondsCounterCheckStatus
#line 22 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
@HCCINIT_SecondsCounterCheckStatus .section 'data'
_SecondsCounterCheckStatus label byte
#pragma debug variable 8 1 _SecondsCounterCheckStatus "SecondsCounterCheckStatus"
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_SecondsCounterCheckStatus .section 'data'
public _SecondsCounterLED
#line 21 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
@HCCINIT_SecondsCounterLED .section 'data'
_SecondsCounterLED label byte
#pragma debug variable 8 1 _SecondsCounterLED "SecondsCounterLED"
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_SecondsCounterLED .section 'data'
public _SecTick
#line 20 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
@HCCINIT_SecTick .section 'data'
_SecTick label byte
#pragma debug variable 14 1 _SecTick "SecTick"
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_SecTick .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_SecTick .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_SecTick .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_SecTick .section 'data'
#line 17 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
public _situation
@HCCINIT0_situation .section 'data'
_situation	db 4 dup(0)
#pragma debug struct_begin 43 ""
#pragma debug field 0 12 "TemperatureValue"
#pragma debug field 0 12 "SmokeValue"
#pragma debug struct_end
#pragma debug variable 43 1 _situation "situation"

@HCCINIT .section 'data'
#pragma debug struct_begin 44 "__pa_bits"
#pragma debug field 21 8 0 1 "__pa0" ;0,1
#pragma debug field 21 8 0 1 "__pa1" ;1,1
#pragma debug field 21 8 0 1 "__pa2" ;2,1
#pragma debug field 21 8 0 1 "__pa3" ;3,1
#pragma debug field 21 8 0 1 "__pa4" ;4,1
#pragma debug field 21 8 0 1 "__pa5" ;5,1
#pragma debug field 21 8 0 1 "__pa6" ;6,1
#pragma debug field 21 8 0 1 "__pa7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 45 ""
#pragma debug field 2 44 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 45 1 ___pa "__pa" 1
#line 35 "c:\users\tech\desktop\powerlinetransceiver\Main\Main.c"
@code .section at 0 'code'
	jmp _main_startup1

extern _builtin_holtek_udivmodhi4_2:byte
extern _builtin_holtek_udivmodhi4:near
extern _UART_Transmit:near
extern _S_RCC_Init:near
extern _S_GPIO_Init:near
extern _InterruptInit:near
extern _UART_Init_2:byte
extern _UART_Init:near
extern _PLT0Init:near
extern _PLT1Init:near
extern _PLTAInit:near
extern _UART_ReceiveNonBlocking:near
extern _PLTAOFF:near
extern _ADCInit:near
extern _ReadADC:near
extern _temperature_2:byte
extern _temperature:near
extern _builtin_holtek_mant1:byte
extern _builtin_holtek_mant12p:byte
extern _builtin_holtek_ftol:near
extern _InitSmokeDetection:near
extern _CheckSmokeLevel_2:byte
extern _CheckSmokeLevel:near
extern _SmokeDetectionOFF:near
extern _ADC_Inactive:near

; 
; Generated by holtek-gcc v3.19, Mon Dec 30 10:52:34 2024
; Rebuild 718
; end of file
